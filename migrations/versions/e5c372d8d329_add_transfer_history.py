"""add_transfer_history

Revision ID: e5c372d8d329
Revises: 057c0fdcdc93
Create Date: 2022-09-15 09:34:25.946923

"""
from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision = 'e5c372d8d329'
down_revision = '057c0fdcdc93'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transfer_status',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('name', sa.String(255), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_by', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_history',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('product_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('transfer_from_user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('transfer_to_user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_by', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['transfer_from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['transfer_to_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer_requests',
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('product_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('transfer_from_user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('transfer_to_user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('transfer_status_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_by', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['transfer_from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['transfer_status_id'], ['transfer_status.id'], ),
    sa.ForeignKeyConstraint(['transfer_to_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('products', sa.Column('price_in_retail', sa.DECIMAL(precision=10, scale=2), nullable=True))
    op.alter_column('products', 'code',
               existing_type=sa.VARCHAR(length=255),
               comment='sold out/in stock',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('products', 'code',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='sold out/in stock',
               existing_nullable=True)
    op.drop_column('products', 'price_in_retail')
    op.drop_table('transfer_requests')
    op.drop_table('product_history')
    op.drop_table('transfer_status')
    # ### end Alembic commands ###
